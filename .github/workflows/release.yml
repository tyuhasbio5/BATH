name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow when a tag starting with 'v' is pushed

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86, x64, arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Set up build environment
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt-get update
            sudo apt-get install -y autoconf gcc make
          elif [ ${{ matrix.os }} == 'windows-latest' ]; then
            choco install make mingw
          elif [ ${{ matrix.os }} == 'macos-latest' ]; then
            brew install autoconf gcc make
          fi

      - name: Clone Easel repository
        run: |
          git clone https://github.com/TravisWheelerLab/easel
          cd easel
          git checkout BATH
          cd ..

      - name: Run autoconf
        run: autoconf

      - name: Configure
        run: ./configure

      - name: Build
        run: |
          make
          mkdir -p installation/usr/local/bin
          cd src && make install DESTDIR=../installation

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: BATH-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            installation/usr/local/bin/bathsearch
            installation/usr/local/bin/bathbuild
            installation/usr/local/bin/bathconvert
            installation/usr/local/bin/bathfetch
            installation/usr/local/bin/bathstat
          if-no-files-found: error

  release:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86, x64, arm]
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: BATH-${{ matrix.os }}-${{ matrix.arch }}
          path: ./artifacts

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/BATH-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_name: BATH-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_content_type: application/octet-stream
